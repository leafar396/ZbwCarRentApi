{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Vision Context Was soll gebaut werden? Eine Software, mit der ein Sachbearbeiter Kunden und Autos erfassen kann. Eine Software, mit der Kunden via Sachbearbeiter Autos f\u00fcr einen gew\u00fcnschnten Zeitraum reservieren und mieten k\u00f6nnen. Wer benutzt das System? Sachbearbeiter Kunden indirekt Wie passt es in die bestehende IT-Landschaft? Es gibt noch keine bestehende IT-Landschaft. Containers Was sind die technologischen Entscheide? Client Angular Server ASP.NET Core Entity Framework Testing x-Unit FakeItEasy Database Microsoft SQL CI/CD GitHub Sonar Wie kommunizieren die Container untereinander? Client / Server HTTP REST Server / Database Entity Framework (TCP/IP) Components Aus welchen Komponenten und Services besteht das System? Verwaltungen Kundenverwaltung Autoverwaltung (inkl. Autoklassen) Reservations- / Mietvertrags-Verwaltung S\u00e4mtliche Verwaltungen greifen via EF auf die DB. Ist klar wie das System \u201ehigh-level\u201c arbeiten soll? Beispiel Kunde erfassen: Der Sachbearbeiter kann im Webclient ein Kunde erfassen. Dazu muss er die entsprechenden Daten bei sich im Browser eingeben. Beim Klick auf Speichern wird ein HTTP POST Request mit den entsprechenden Daten im Payload auf die Backend ASP .NET API gemacht. Diese validiert die Daten. Falls ung\u00fcltig gibt sie ein HTTP Status 400 zur\u00fcck. Falls g\u00fcltig erstellt sie im Entity Framework ein neues Objekt und speichert es in der Datenbank. Sobald das Objekt erfolgreich gespeichert wurde gibt die API einen HTTP Status 201 zur\u00fcck. Die Webapplikation kann dann entsprechend mit einer Erfolgsmeldung darauf reagieren. Use Cases im \"Brief\" Format UC1 Der Sachbearbeiter kann Kunden verwalten (CRUD) Der Sachbearbeiter kann im Webclient Kunden: Erfassen Felder: Kundennummer Muss einzigartig sein. Vorname Name Strasse Nummer PLZ Ort Land Bearbeiten L\u00f6schen Kunden, die bereits eine Reservation, oder einen Mietvertrag besitzen k\u00f6nnen nicht gel\u00f6scht werden. Sondern diese werden nur als gel\u00f6scht markiert. Sobald ein Kunde als gel\u00f6scht markiert wurde, kann er keine neuen Reservationen mehr vornehmen. Kunden mit offenen Reservationen k\u00f6nnen nicht als gel\u00f6scht markiert werden. Suchen Kunden sollen \u00fcber folgende Felder gesucht werden k\u00f6nnen: Vorname Nachname Kundennummer UC2 Der Sachbearbeiter kann Autoklassen verwalten (CRUD) Der Sachbearbeiter kann im Webclient Autoklassen: Erfassen Felder: Name Tagesgeb\u00fchr Bearbeiten L\u00f6schen Klassen, die bereits mind. 1 Auto zugewiesen sind k\u00f6nnen nicht gel\u00f6scht werden. Suchen Klassen sollen \u00fcber folgende Felder gesucht werden k\u00f6nnen: Name UC3 Der Sachbearbeiter kann Autos verwalten (CRUD) Der Sachbearbeiter kann im Webclient Autos: Erfassen Felder: Marke Typ Autonummer Autoklasse Bearbeiten L\u00f6schen Autos, die bereits mind. einem Mietvertrag zugewiesen sind, k\u00f6nnen nicht gel\u00f6scht werden. Sondern sie werden nur als gel\u00f6scht markiert. Als gel\u00f6scht markierte Autos k\u00f6nnen nicht erneut reserviert werden. Autos mit offenen Reservationen k\u00f6nnen nicht als gel\u00f6scht markiert werden. Suchen Autos sollen \u00fcber folgende Felder gesucht werden k\u00f6nnen: Marke Autnummer UC4 Der Sachbearbeiter kann Autos f\u00fcr einen Kunde reservieren \u00dcber die Auto-Suche (UC3) kann der Sachbearbeiter ein Auto ausw\u00e4hlen. Nachdem er das Auto ausgew\u00e4hlt hat, kann er ein Start und ein Enddatum der Reservation angeben. Sobald er die Anzahl Tage ausgew\u00e4hlt hat, werden ihm die Gesamtkosten f\u00fcr die Reservation angezeigt. Beim Klick auf \"Reservieren\" wird eine neue Reservation angelegt: Felder Reservationsnummer Kunde Auto Startdatum Enddatum UC5 Der Kunde kann ein reserviertes Auto abholen Am Startdatum kommt der Kunde in die Garage und der Sachbearbeiter klickt bei der entsprechenden Reservation: Mietvertrag generieren Dieser Button wandelt die Reservation in einen Mietvertrag um. Das Reservationsmodel hat ein Flag \"Mietvertrag\". Dieses wird just in diesem Moment auf true gesetzt. Der Kunde unterzeichnet den Vertrag und kann das Auto mitnehmen. Domain Model Views Deployment View Implementation View | +---docs | | | \\---images | \\---source | +---src | \\---CarRentApi | | | +---CarManagement | | +---Api | | +---Application | | +---Domain | | \\---Infrastructure +---CustomerManagement | | +---Api | | +---Application | | +---Domain | | \\---Infrastructure +---ReservationsManagement | | +---Api | | +---Application | | +---Domain | | \\---Infrastructure \\---tests \\---CarRentApi.Tests","title":"Vision"},{"location":"#vision","text":"","title":"Vision"},{"location":"#context","text":"","title":"Context"},{"location":"#was-soll-gebaut-werden","text":"Eine Software, mit der ein Sachbearbeiter Kunden und Autos erfassen kann. Eine Software, mit der Kunden via Sachbearbeiter Autos f\u00fcr einen gew\u00fcnschnten Zeitraum reservieren und mieten k\u00f6nnen.","title":"Was soll gebaut werden?"},{"location":"#wer-benutzt-das-system","text":"Sachbearbeiter Kunden indirekt","title":"Wer benutzt das System?"},{"location":"#wie-passt-es-in-die-bestehende-it-landschaft","text":"Es gibt noch keine bestehende IT-Landschaft.","title":"Wie passt es in die bestehende IT-Landschaft?"},{"location":"#containers","text":"","title":"Containers"},{"location":"#was-sind-die-technologischen-entscheide","text":"Client Angular Server ASP.NET Core Entity Framework Testing x-Unit FakeItEasy Database Microsoft SQL CI/CD GitHub Sonar","title":"Was sind die technologischen Entscheide?"},{"location":"#wie-kommunizieren-die-container-untereinander","text":"Client / Server HTTP REST Server / Database Entity Framework (TCP/IP)","title":"Wie kommunizieren die Container untereinander?"},{"location":"#components","text":"","title":"Components"},{"location":"#aus-welchen-komponenten-und-services-besteht-das-system","text":"Verwaltungen Kundenverwaltung Autoverwaltung (inkl. Autoklassen) Reservations- / Mietvertrags-Verwaltung S\u00e4mtliche Verwaltungen greifen via EF auf die DB.","title":"Aus welchen Komponenten und Services besteht das System?"},{"location":"#ist-klar-wie-das-system-high-level-arbeiten-soll","text":"Beispiel Kunde erfassen: Der Sachbearbeiter kann im Webclient ein Kunde erfassen. Dazu muss er die entsprechenden Daten bei sich im Browser eingeben. Beim Klick auf Speichern wird ein HTTP POST Request mit den entsprechenden Daten im Payload auf die Backend ASP .NET API gemacht. Diese validiert die Daten. Falls ung\u00fcltig gibt sie ein HTTP Status 400 zur\u00fcck. Falls g\u00fcltig erstellt sie im Entity Framework ein neues Objekt und speichert es in der Datenbank. Sobald das Objekt erfolgreich gespeichert wurde gibt die API einen HTTP Status 201 zur\u00fcck. Die Webapplikation kann dann entsprechend mit einer Erfolgsmeldung darauf reagieren.","title":"Ist klar wie das System \u201ehigh-level\u201c arbeiten soll?"},{"location":"#use-cases-im-brief-format","text":"","title":"Use Cases im \"Brief\" Format"},{"location":"#uc1-der-sachbearbeiter-kann-kunden-verwalten-crud","text":"Der Sachbearbeiter kann im Webclient Kunden: Erfassen Felder: Kundennummer Muss einzigartig sein. Vorname Name Strasse Nummer PLZ Ort Land Bearbeiten L\u00f6schen Kunden, die bereits eine Reservation, oder einen Mietvertrag besitzen k\u00f6nnen nicht gel\u00f6scht werden. Sondern diese werden nur als gel\u00f6scht markiert. Sobald ein Kunde als gel\u00f6scht markiert wurde, kann er keine neuen Reservationen mehr vornehmen. Kunden mit offenen Reservationen k\u00f6nnen nicht als gel\u00f6scht markiert werden. Suchen Kunden sollen \u00fcber folgende Felder gesucht werden k\u00f6nnen: Vorname Nachname Kundennummer","title":"UC1 Der Sachbearbeiter kann Kunden verwalten (CRUD)"},{"location":"#uc2-der-sachbearbeiter-kann-autoklassen-verwalten-crud","text":"Der Sachbearbeiter kann im Webclient Autoklassen: Erfassen Felder: Name Tagesgeb\u00fchr Bearbeiten L\u00f6schen Klassen, die bereits mind. 1 Auto zugewiesen sind k\u00f6nnen nicht gel\u00f6scht werden. Suchen Klassen sollen \u00fcber folgende Felder gesucht werden k\u00f6nnen: Name","title":"UC2 Der Sachbearbeiter kann Autoklassen verwalten (CRUD)"},{"location":"#uc3-der-sachbearbeiter-kann-autos-verwalten-crud","text":"Der Sachbearbeiter kann im Webclient Autos: Erfassen Felder: Marke Typ Autonummer Autoklasse Bearbeiten L\u00f6schen Autos, die bereits mind. einem Mietvertrag zugewiesen sind, k\u00f6nnen nicht gel\u00f6scht werden. Sondern sie werden nur als gel\u00f6scht markiert. Als gel\u00f6scht markierte Autos k\u00f6nnen nicht erneut reserviert werden. Autos mit offenen Reservationen k\u00f6nnen nicht als gel\u00f6scht markiert werden. Suchen Autos sollen \u00fcber folgende Felder gesucht werden k\u00f6nnen: Marke Autnummer","title":"UC3 Der Sachbearbeiter kann Autos verwalten (CRUD)"},{"location":"#uc4-der-sachbearbeiter-kann-autos-fur-einen-kunde-reservieren","text":"\u00dcber die Auto-Suche (UC3) kann der Sachbearbeiter ein Auto ausw\u00e4hlen. Nachdem er das Auto ausgew\u00e4hlt hat, kann er ein Start und ein Enddatum der Reservation angeben. Sobald er die Anzahl Tage ausgew\u00e4hlt hat, werden ihm die Gesamtkosten f\u00fcr die Reservation angezeigt. Beim Klick auf \"Reservieren\" wird eine neue Reservation angelegt: Felder Reservationsnummer Kunde Auto Startdatum Enddatum","title":"UC4 Der Sachbearbeiter kann Autos f\u00fcr einen Kunde reservieren"},{"location":"#uc5-der-kunde-kann-ein-reserviertes-auto-abholen","text":"Am Startdatum kommt der Kunde in die Garage und der Sachbearbeiter klickt bei der entsprechenden Reservation: Mietvertrag generieren Dieser Button wandelt die Reservation in einen Mietvertrag um. Das Reservationsmodel hat ein Flag \"Mietvertrag\". Dieses wird just in diesem Moment auf true gesetzt. Der Kunde unterzeichnet den Vertrag und kann das Auto mitnehmen.","title":"UC5 Der Kunde kann ein reserviertes Auto abholen"},{"location":"#domain-model","text":"","title":"Domain Model"},{"location":"#views","text":"","title":"Views"},{"location":"#deployment-view","text":"","title":"Deployment View"},{"location":"#implementation-view","text":"| +---docs | | | \\---images | \\---source | +---src | \\---CarRentApi | | | +---CarManagement | | +---Api | | +---Application | | +---Domain | | \\---Infrastructure +---CustomerManagement | | +---Api | | +---Application | | +---Domain | | \\---Infrastructure +---ReservationsManagement | | +---Api | | +---Application | | +---Domain | | \\---Infrastructure \\---tests \\---CarRentApi.Tests","title":"Implementation View"}]}